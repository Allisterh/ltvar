// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fSampLTBv
arma::mat fSampLTBv(arma::mat my, arma::cube amX, arma::mat mPhi, arma::colvec vmu, arma::mat mSig, arma::cube amG2inv, arma::vec vd, arma::mat mbo, int stabletest, int Intercept, int nl);
RcppExport SEXP _ltvar_fSampLTBv(SEXP mySEXP, SEXP amXSEXP, SEXP mPhiSEXP, SEXP vmuSEXP, SEXP mSigSEXP, SEXP amG2invSEXP, SEXP vdSEXP, SEXP mboSEXP, SEXP stabletestSEXP, SEXP InterceptSEXP, SEXP nlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type my(mySEXP);
    Rcpp::traits::input_parameter< arma::cube >::type amX(amXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type vmu(vmuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mSig(mSigSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type amG2inv(amG2invSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vd(vdSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mbo(mboSEXP);
    Rcpp::traits::input_parameter< int >::type stabletest(stabletestSEXP);
    Rcpp::traits::input_parameter< int >::type Intercept(InterceptSEXP);
    Rcpp::traits::input_parameter< int >::type nl(nlSEXP);
    rcpp_result_gen = Rcpp::wrap(fSampLTBv(my, amX, mPhi, vmu, mSig, amG2inv, vd, mbo, stabletest, Intercept, nl));
    return rcpp_result_gen;
END_RCPP
}
// fSampSPM
List fSampSPM(arma::mat mp, arma::mat mSig, arma::mat mPhi, arma::vec vmu, double dnu, double dV0, double da0, double db0, double dm0, double ds0, arma::vec vd, double dk0);
RcppExport SEXP _ltvar_fSampSPM(SEXP mpSEXP, SEXP mSigSEXP, SEXP mPhiSEXP, SEXP vmuSEXP, SEXP dnuSEXP, SEXP dV0SEXP, SEXP da0SEXP, SEXP db0SEXP, SEXP dm0SEXP, SEXP ds0SEXP, SEXP vdSEXP, SEXP dk0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mp(mpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mSig(mSigSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mPhi(mPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vmu(vmuSEXP);
    Rcpp::traits::input_parameter< double >::type dnu(dnuSEXP);
    Rcpp::traits::input_parameter< double >::type dV0(dV0SEXP);
    Rcpp::traits::input_parameter< double >::type da0(da0SEXP);
    Rcpp::traits::input_parameter< double >::type db0(db0SEXP);
    Rcpp::traits::input_parameter< double >::type dm0(dm0SEXP);
    Rcpp::traits::input_parameter< double >::type ds0(ds0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vd(vdSEXP);
    Rcpp::traits::input_parameter< double >::type dk0(dk0SEXP);
    rcpp_result_gen = Rcpp::wrap(fSampSPM(mp, mSig, mPhi, vmu, dnu, dV0, da0, db0, dm0, ds0, vd, dk0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ltvar_fSampLTBv", (DL_FUNC) &_ltvar_fSampLTBv, 11},
    {"_ltvar_fSampSPM", (DL_FUNC) &_ltvar_fSampSPM, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_ltvar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
